on:
  push:
    branches:
      - main
    
env:
  RESOURCE_GROUP: "csu-nl-sr-graphql"
jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      registry: ${{ steps.deploy_infra.outputs.registry }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy infra
        id: deploy_infra
        run: |
          az group create --name ${{env.RESOURCE_GROUP}} --location westeurope
          echo "::set-output name=registry::$(az deployment group create --resource-group ${{env.RESOURCE_GROUP}} --template-file ./deployment/infra/main.bicep --query properties.outputs.containerRegistryName.value)"
  deploy_apps:
    runs-on: ubuntu-latest
    needs: deploy_infra
    
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: echo ${{needs.deploy_infra.outputs.registry}}
      - name: upload containers
        run: |
          ./deployment/apps/upload_docker_images.sh ${{needs.deploy_infra.outputs.registry}} 
      - name: deploy container apps
        id: deploy_apps
        run: |
          echo "::set-output name=graph_endpoint::$(az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} --template-file ./deployment/apps/main.bicep --query properties.outputs.graphqlEndpoint.value)"

      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: install requirements and retrieve schema
        run: |
          npm install -g get-graphql-schema
          echo $(az deployment group show -g ${{env.RESOURCE_GROUP}} -n main --query properties.outputs.graphqlEndpoint.value)
          ./deployment/apps/upload_graphql_schema.sh ${{env.RESOURCE_GROUP}}
